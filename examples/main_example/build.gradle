/*
   Project JacamoComponent

   Gradle build file for JaCaMo Applications with Camel
   November 08, 2018 - 16:23:38
*/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.3.1'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()

    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url "http://jacamo.sourceforge.net/maven2" }
}

dependencies {
  // ------------- component dependency -------------
  implementation 'org.jacamo:jacamo-camel:0.4-SNAPSHOT'
  // compile fileTree(dir: 'libs', include: ['*.jar'])

  // ------------- main dependencies -------------
  implementation 'org.jacamo:jacamo:0.8-SNAPSHOT'

  // https://mvnrepository.com/artifact/org.apache.camel/camel-core
  implementation group: 'org.apache.camel', name: 'camel-core', version: '2.22.1'

  // https://mvnrepository.com/artifact/org.springframework/spring-context
  implementation group: 'org.springframework', name: 'spring-context', version: '5.0.10.RELEASE'


  // ------------- log dependencies -------------
  // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
  implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

  // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'


  // ------------- JDK 9+ dependencies -------------
  // https://mvnrepository.com/artifact/javax.xml/jaxb-api
  implementation group: 'javax.xml', name: 'jaxb-api', version: '2.1'
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task run (type: JavaExec, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'runs the JaCaMo platform'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'main.jcm'
    classpath sourceSets.main.runtimeClasspath
}

task uberJar(type: Jar, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'jacamo-jcmrest' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar

    doFirst {
        copy {
            from 'jcmrest.jcm'
            rename 'jcmrest.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
